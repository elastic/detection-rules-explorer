{"pageProps":{"rule":{"hunt":{"author":"Elastic","description":"This hunt identifies when a process loads a DLL normally located in `System32` or `SysWOW64` folders from an unusual path. Adversaries may execute their own malicious payloads by side-loading malicious DLLs. The host count also should help exclude false-positives by looking at low occurrences when this abnormal behavior is limited to unique agents.","integration":["endpoint","windows"],"uuid":"d06bc067-6174-412f-b1c9-bf8f15149519","name":"DLL Hijack via Masquerading as Microsoft Native Libraries","language":["ES|QL"],"license":"Elastic License v2","mitre":["T1574","T1574.001"],"notes":["This hunt has two optional queries, one for Elastic Defend data and another for Sysmon data.","This hunt requires the creation of an [enrichment policy](https://www.elastic.co/guide/en/elasticsearch/reference/current/esql-enrich-data.html) to use with the ES|QL (ENRICH command).","The `dll.hash.sha256` field can be used to pivot and further investigate the DLL origin and purpose.","Paths like `C:\\Users\\Public and C:\\ProgramData\\` are often observed in malware employing DLL side-loading."],"query":["from logs-endpoint.events.library-*\n| where @timestamp > NOW() - 7 day\n| where host.os.family == \"windows\" and event.action == \"load\" and process.code_signature.status == \"trusted\" and dll.code_signature.status != \"trusted\" and\n not dll.path rlike \"\"\"[c-fC-F]:\\\\(Windows|windows|WINDOWS)\\\\(System32|SysWOW64|system32|syswow64)\\\\[a-zA-Z0-9_]+.dll\"\"\"\n| keep dll.name, dll.path, dll.hash.sha256, process.executable, host.id\n /* steps how to create DL enrichment policy https://gist.github.com/Samirbous/9f9c3237a0ada745e71cc2ba3425311c  */\n| ENRICH libs-policy-defend\n /* if the DLL is normally located is system32 or syswow64 folders, native tag will be equal to yes */\n| where native == \"yes\" and not starts_with(dll.path, \"C:\\\\Windows\\\\assembly\\\\NativeImages\")\n /* normalize paths by removing random patterns */\n| eval process_path = replace(process.executable, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"),\n  dll_path = replace(dll.path, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\")\n| stats host_count = count_distinct(host.id) by dll.name, dll_path, process_path, dll.hash.sha256\n| sort host_count asc\n","from logs-windows.sysmon_operational-*\n| where @timestamp > NOW() - 7 day\n| where host.os.family == \"windows\" and  event.category == \"process\" and event.action == \"Image loaded\" and file.code_signature.status != \"Valid\" and\n not file.path rlike \"\"\"[c-fC-F]:\\\\(Windows|windows|WINDOWS)\\\\(System32|SysWOW64|system32|syswow64)\\\\[a-zA-Z0-9_]+.dll\"\"\"\n| keep file.name, file.path, file.hash.sha256, process.executable, host.id\n /* steps to create DL enrichment policy https://gist.github.com/Samirbous/9f9c3237a0ada745e71cc2ba3425311c - just replace dll by file */\n| ENRICH libs-policy-sysmon\n /* if the DLL is normally located is system32 or syswow64 folders, native tag will be equal to yes */\n| where native == \"yes\" and not starts_with(file.path, \"C:\\\\Windows\\\\assembly\\\\NativeImages\")\n /* normalize paths by removing random patterns */\n| eval process_path = replace(process.executable, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"),\n  dll_path = replace(file.path, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\")\n| stats host_count = count_distinct(host.id) by file.name, dll_path, process_path, file.hash.sha256\n| sort host_count asc\n"]},"rule":{"tags":["Hunt Type: Hunt"],"query":["from logs-endpoint.events.library-*\n| where @timestamp > NOW() - 7 day\n| where host.os.family == \"windows\" and event.action == \"load\" and process.code_signature.status == \"trusted\" and dll.code_signature.status != \"trusted\" and\n not dll.path rlike \"\"\"[c-fC-F]:\\\\(Windows|windows|WINDOWS)\\\\(System32|SysWOW64|system32|syswow64)\\\\[a-zA-Z0-9_]+.dll\"\"\"\n| keep dll.name, dll.path, dll.hash.sha256, process.executable, host.id\n /* steps how to create DL enrichment policy https://gist.github.com/Samirbous/9f9c3237a0ada745e71cc2ba3425311c  */\n| ENRICH libs-policy-defend\n /* if the DLL is normally located is system32 or syswow64 folders, native tag will be equal to yes */\n| where native == \"yes\" and not starts_with(dll.path, \"C:\\\\Windows\\\\assembly\\\\NativeImages\")\n /* normalize paths by removing random patterns */\n| eval process_path = replace(process.executable, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"),\n  dll_path = replace(dll.path, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\")\n| stats host_count = count_distinct(host.id) by dll.name, dll_path, process_path, dll.hash.sha256\n| sort host_count asc\n","from logs-windows.sysmon_operational-*\n| where @timestamp > NOW() - 7 day\n| where host.os.family == \"windows\" and  event.category == \"process\" and event.action == \"Image loaded\" and file.code_signature.status != \"Valid\" and\n not file.path rlike \"\"\"[c-fC-F]:\\\\(Windows|windows|WINDOWS)\\\\(System32|SysWOW64|system32|syswow64)\\\\[a-zA-Z0-9_]+.dll\"\"\"\n| keep file.name, file.path, file.hash.sha256, process.executable, host.id\n /* steps to create DL enrichment policy https://gist.github.com/Samirbous/9f9c3237a0ada745e71cc2ba3425311c - just replace dll by file */\n| ENRICH libs-policy-sysmon\n /* if the DLL is normally located is system32 or syswow64 folders, native tag will be equal to yes */\n| where native == \"yes\" and not starts_with(file.path, \"C:\\\\Windows\\\\assembly\\\\NativeImages\")\n /* normalize paths by removing random patterns */\n| eval process_path = replace(process.executable, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"),\n  dll_path = replace(file.path, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\")\n| stats host_count = count_distinct(host.id) by file.name, dll_path, process_path, file.hash.sha256\n| sort host_count asc\n"],"license":"Elastic License v2","description":"This hunt identifies when a process loads a DLL normally located in `System32` or `SysWOW64` folders from an unusual path. Adversaries may execute their own malicious payloads by side-loading malicious DLLs. The host count also should help exclude false-positives by looking at low occurrences when this abnormal behavior is limited to unique agents.","threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"","name":"","reference":""},"technique":[{"id":"T1574","name":"","reference":"https://attack.mitre.org/techniques/T1574/"},{"id":"T1574","name":"","reference":"https://attack.mitre.org/techniques/T1574/","subtechnique":[{"id":"T1574.001","reference":"https://attack.mitre.org/techniques/T1574/001/"}]}]}]},"metadata":{"creation_date":"1970-01-01T00:00:00.000Z","updated_date":"1970-01-01T00:00:00.000Z","integration":["endpoint","windows"]}}},"__N_SSG":true}