{"pageProps":{"rule":{"hunt":{"author":"Elastic","description":"Using aggregation and strings extraction, this hunt identifies instances where a scheduled task is created and set to run a command unique to a specific host. This could be the result of persistence as a Windows Scheduled Task.\n","integration":["system"],"uuid":"44223fd6-8241-4c21-9d54-21201fa15b12","name":"Scheduled Tasks Creation for Unique Hosts by Task Command","language":["ES|QL"],"license":"Elastic License v2","notes":["This hunt returns the aggregation of created tasks by task name, command to execute and number of hosts where this task is present.","Close attention should be paid to suspicious paths like `C:\\Users\\Public and C:\\ProgramData\\` as well as LOLBins."],"mitre":["T1053","T1053.005"],"query":["from logs-system.security-default-*\n| where  @timestamp > now() - 7 day\n| where host.os.family == \"windows\" and event.code == \"4698\" and event.action == \"scheduled-task-created\"\n /* parsing unstructured data from winlog message to extract a scheduled task Exec command */\n| grok message \"(?<Command><Command>.+</Command>)\" | eval Command = replace(Command, \"(<Command>|</Command>)\", \"\")\n| where Command is not null\n /* normalise task name by removing usersid and uuid string patterns */\n| eval TaskName = replace(winlog.event_data.TaskName, \"\"\"((-S-1-5-.*)|\\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\})\"\"\", \"\")\n /* normalise task name by removing random patterns in a file path */\n| eval Task_Command = replace(Command, \"\"\"(ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\")\n /* normalize user home profile path */\n| eval Task_Command = replace(Task_Command, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$~]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\")\n| where Task_Command like \"?*\" and not starts_with(Task_Command, \"C:\\\\Program Files\") and not starts_with(Task_Command, \"\\\"C:\\\\Program Files\")\n| stats tasks_count = count(*), hosts_count = count_distinct(host.id) by Task_Command, TaskName\n| where hosts_count == 1\n"]},"rule":{"tags":["Hunt Type: Hunt"],"query":["from logs-system.security-default-*\n| where  @timestamp > now() - 7 day\n| where host.os.family == \"windows\" and event.code == \"4698\" and event.action == \"scheduled-task-created\"\n /* parsing unstructured data from winlog message to extract a scheduled task Exec command */\n| grok message \"(?<Command><Command>.+</Command>)\" | eval Command = replace(Command, \"(<Command>|</Command>)\", \"\")\n| where Command is not null\n /* normalise task name by removing usersid and uuid string patterns */\n| eval TaskName = replace(winlog.event_data.TaskName, \"\"\"((-S-1-5-.*)|\\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\})\"\"\", \"\")\n /* normalise task name by removing random patterns in a file path */\n| eval Task_Command = replace(Command, \"\"\"(ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\")\n /* normalize user home profile path */\n| eval Task_Command = replace(Task_Command, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$~]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\")\n| where Task_Command like \"?*\" and not starts_with(Task_Command, \"C:\\\\Program Files\") and not starts_with(Task_Command, \"\\\"C:\\\\Program Files\")\n| stats tasks_count = count(*), hosts_count = count_distinct(host.id) by Task_Command, TaskName\n| where hosts_count == 1\n"],"license":"Elastic License v2","description":"Using aggregation and strings extraction, this hunt identifies instances where a scheduled task is created and set to run a command unique to a specific host. This could be the result of persistence as a Windows Scheduled Task.\n","threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"","name":"","reference":""},"technique":[{"id":"T1053","name":"","reference":"https://attack.mitre.org/techniques/T1053/"},{"id":"T1053","name":"","reference":"https://attack.mitre.org/techniques/T1053/","subtechnique":[{"id":"T1053.005","reference":"https://attack.mitre.org/techniques/T1053/005/"}]}]}]},"metadata":{"creation_date":"1970-01-01T00:00:00.000Z","updated_date":"1970-01-01T00:00:00.000Z","integration":["system"]}}},"__N_SSG":true}