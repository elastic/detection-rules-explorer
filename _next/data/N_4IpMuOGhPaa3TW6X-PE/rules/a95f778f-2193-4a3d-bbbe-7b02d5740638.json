{"pageProps":{"rule":{"hunt":{"author":"Elastic","description":"This hunt identifies potential persistence mechanisms via rc.local and rc.common on Linux systems. RC scripts are used to start custom applications, services, scripts or commands during start-up. RC scripts have mostly been replaced by Systemd. However, through the \"systemd-rc-local-generator\", these files can be converted to services that run at boot. The query monitors for file creation or modification events in the /etc/rc.local and /etc/rc.common files, as well as processes started by these scripts. These activities can indicate attempts to establish persistence through rc.local modifications.\n","integration":["endpoint","system"],"uuid":"a95f778f-2193-4a3d-bbbe-7b02d5740638","name":"Persistence via rc.local/rc.common","language":["ES|QL","SQL"],"license":"Elastic License v2","notes":["This hunt includes multiple ES|QL and OSQuery queries to detect potential persistence mechanisms via rc.local on Linux systems.","Detects file creation or modification events in the /etc/rc.local and /etc/rc.common files, which are used for system initialization scripts.","Uses EVAL to tag potential persistence events and counts occurrences to identify unusual activity.","Monitors processes started by rc.local and rc.common scripts to detect potential persistence mechanisms.","Syslog hunting query is provided to complement the detection by analyzing syslog entries related to rc.local and rc.common processes.","OSQuery queries are provided to retrieve systemd unit states, startup items, and detailed file information related to rc.local and rc.common."],"mitre":["T1037.004","T1546.003"],"query":["from logs-endpoint.events.file-*\n| where @timestamp > now() - 30 day\n| where host.os.type == \"linux\" and event.type in (\"creation\", \"change\") and (file.path == \"/etc/rc.local\" or file.path == \"/etc/rc.common\")\n| eval persistence = case(file.path == \"/etc/rc.local\" or file.path == \"/etc/rc.common\", process.name, null)\n| stats pers_count = count(persistence), agent_count = count_distinct(agent.id) by process.executable\n| where pers_count > 0 and pers_count <= 3 and agent_count <= 3\n| sort pers_count asc\n| limit 100\n","from logs-system.syslog-*\n| where @timestamp > now() - 30 day\n| where host.os.type == \"linux\" and process.name in (\"rc.local\", \"rc.common\")\n| stats cc = count(), host_count = count_distinct(host.name) by message\n| where host_count <= 3 and cc < 10\n| sort cc asc\n| limit 100\n","SELECT * FROM systemd_units WHERE id = \"rc-local.service\"\n","SELECT * FROM startup_items WHERE name = \"rc-local.service\"\n","SELECT\n    f.filename,\n    f.path,\n    u.username AS file_owner,\n    g.groupname AS group_owner,\n    datetime(f.atime, 'unixepoch') AS file_last_access_time,\n    datetime(f.mtime, 'unixepoch') AS file_last_modified_time,\n    datetime(f.ctime, 'unixepoch') AS file_last_status_change_time,\n    datetime(f.btime, 'unixepoch') AS file_created_time,\n    f.size AS size_bytes\nFROM\n    file f\nLEFT JOIN\n    users u ON f.uid = u.uid\nLEFT JOIN\n    groups g ON f.gid = g.gid\nWHERE\n    f.path in ('/etc/rc.local', '/etc/rc.common')\n"]},"rule":{"tags":["Hunt Type: Hunt"],"query":["from logs-endpoint.events.file-*\n| where @timestamp > now() - 30 day\n| where host.os.type == \"linux\" and event.type in (\"creation\", \"change\") and (file.path == \"/etc/rc.local\" or file.path == \"/etc/rc.common\")\n| eval persistence = case(file.path == \"/etc/rc.local\" or file.path == \"/etc/rc.common\", process.name, null)\n| stats pers_count = count(persistence), agent_count = count_distinct(agent.id) by process.executable\n| where pers_count > 0 and pers_count <= 3 and agent_count <= 3\n| sort pers_count asc\n| limit 100\n","from logs-system.syslog-*\n| where @timestamp > now() - 30 day\n| where host.os.type == \"linux\" and process.name in (\"rc.local\", \"rc.common\")\n| stats cc = count(), host_count = count_distinct(host.name) by message\n| where host_count <= 3 and cc < 10\n| sort cc asc\n| limit 100\n","SELECT * FROM systemd_units WHERE id = \"rc-local.service\"\n","SELECT * FROM startup_items WHERE name = \"rc-local.service\"\n","SELECT\n    f.filename,\n    f.path,\n    u.username AS file_owner,\n    g.groupname AS group_owner,\n    datetime(f.atime, 'unixepoch') AS file_last_access_time,\n    datetime(f.mtime, 'unixepoch') AS file_last_modified_time,\n    datetime(f.ctime, 'unixepoch') AS file_last_status_change_time,\n    datetime(f.btime, 'unixepoch') AS file_created_time,\n    f.size AS size_bytes\nFROM\n    file f\nLEFT JOIN\n    users u ON f.uid = u.uid\nLEFT JOIN\n    groups g ON f.gid = g.gid\nWHERE\n    f.path in ('/etc/rc.local', '/etc/rc.common')\n"],"license":"Elastic License v2","description":"This hunt identifies potential persistence mechanisms via rc.local and rc.common on Linux systems. RC scripts are used to start custom applications, services, scripts or commands during start-up. RC scripts have mostly been replaced by Systemd. However, through the \"systemd-rc-local-generator\", these files can be converted to services that run at boot. The query monitors for file creation or modification events in the /etc/rc.local and /etc/rc.common files, as well as processes started by these scripts. These activities can indicate attempts to establish persistence through rc.local modifications.\n","threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"","name":"","reference":""},"technique":[{"id":"T1037","name":"","reference":"https://attack.mitre.org/techniques/T1037/","subtechnique":[{"id":"T1037.004","reference":"https://attack.mitre.org/techniques/T1037/004/"}]},{"id":"T1546","name":"","reference":"https://attack.mitre.org/techniques/T1546/","subtechnique":[{"id":"T1546.003","reference":"https://attack.mitre.org/techniques/T1546/003/"}]}]}]},"metadata":{"creation_date":"1970-01-01T00:00:00.000Z","updated_date":"1970-01-01T00:00:00.000Z","integration":["endpoint","system"]}}},"__N_SSG":true}