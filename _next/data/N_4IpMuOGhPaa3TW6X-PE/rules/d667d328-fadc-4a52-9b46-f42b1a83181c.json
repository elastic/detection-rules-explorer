{"pageProps":{"rule":{"hunt":{"author":"Elastic","description":"This hunt identifies potential persistence mechanisms leveraging Loadable Kernel Modules (LKMs) on Linux systems. LKMs enable dynamic extension of kernel functionality but can be abused by attackers to load malicious code into the kernel, granting them high privileges or persistence. This hunt monitors suspicious kernel module file creations, LKM-related process executions, and access to kernel module configuration files.\n","integration":["endpoint"],"uuid":"d667d328-fadc-4a52-9b46-f42b1a83181c","name":"Persistence via Loadable Kernel Modules","language":["ES|QL","SQL"],"license":"Elastic License v2","notes":["Tracks the creation of loadable kernel module files (.ko) in non-standard directories to identify potential malicious modules.","Monitors the execution of processes related to kernel module management, such as kmod, modprobe, insmod, and rmmod, to detect suspicious or unusual activity.","Identifies changes to critical kernel module configuration files, including /etc/modprobe.d/, /etc/modules, and related paths.","Uses OSQuery queries to gather detailed metadata on kernel modules currently loaded, supporting forensic analysis of potential persistence mechanisms.","Provides statistics and counts to help identify rare or anomalous kernel module-related events."],"mitre":["T1547.006"],"query":["from logs-endpoint.events.file-*\n| keep @timestamp, host.os.type, event.type, event.action, file.extension, file.path, process.executable, agent.id\n| where @timestamp > now() - 30 day\n| where host.os.type == \"linux\" and event.type == \"creation\" and file.extension == \"ko\" and not (\n  // Add your exclusions here\n  file.path like \"/run/initramfs/*\" or\n  file.path like \"/var/tmp/mkinitramfs*\"\n)\n| stats cc = count(), agent_count = count_distinct(agent.id) by file.path, process.executable\n| where agent_count <= 3\n| sort cc asc\n| limit 100\n","from logs-endpoint.events.process-*\n| keep @timestamp, host.os.type, event.type, event.action, process.name, agent.id, process.args, process.args_count\n| where @timestamp > now() - 30 days\n| where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and process.name in (\"kmod\", \"modprobe\", \"insmod\", \"rmmod\")\n| stats cc = count(), agent_count = count_distinct(agent.id) by process.args, process.args_count\n| where cc == 1 and agent_count == 1 and process.args_count <= 3\n| sort cc asc\n| limit 100\n","SELECT\n    f.filename,\n    f.path,\n    u.username AS file_owner,\n    g.groupname AS group_owner,\n    datetime(f.atime, 'unixepoch') AS file_last_access_time,\n    datetime(f.mtime, 'unixepoch') AS file_last_modified_time,\n    datetime(f.ctime, 'unixepoch') AS file_last_status_change_time\n    datetime(f.btime, 'unixepoch') AS file_created_time,\n    f.size AS size_bytes\nFROM\n    file f\nLEFT JOIN\n    users u ON f.uid = u.uid\nLEFT JOIN\n    groups g ON f.gid = g.gid\nWHERE\n    f.path LIKE '/etc/modprobe.d/%'\n    OR f.path LIKE '/usr/lib/modprobe.d/%'\n    OR f.path LIKE '/usr/lib/security/%'\n    OR f.path LIKE '/etc/modules-load.d/%'\n    OR f.path LIKE '/run/modules-load.d/%'\n    OR f.path LIKE '/usr/local/lib/modules-load.d/%'\n    OR f.path like '/usr/lib/modules-load.d/%'\n    OR f.path = '/etc/modules'\n","SELECT * FROM kernel_modules;\n"]},"rule":{"tags":["Hunt Type: Hunt"],"query":["from logs-endpoint.events.file-*\n| keep @timestamp, host.os.type, event.type, event.action, file.extension, file.path, process.executable, agent.id\n| where @timestamp > now() - 30 day\n| where host.os.type == \"linux\" and event.type == \"creation\" and file.extension == \"ko\" and not (\n  // Add your exclusions here\n  file.path like \"/run/initramfs/*\" or\n  file.path like \"/var/tmp/mkinitramfs*\"\n)\n| stats cc = count(), agent_count = count_distinct(agent.id) by file.path, process.executable\n| where agent_count <= 3\n| sort cc asc\n| limit 100\n","from logs-endpoint.events.process-*\n| keep @timestamp, host.os.type, event.type, event.action, process.name, agent.id, process.args, process.args_count\n| where @timestamp > now() - 30 days\n| where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and process.name in (\"kmod\", \"modprobe\", \"insmod\", \"rmmod\")\n| stats cc = count(), agent_count = count_distinct(agent.id) by process.args, process.args_count\n| where cc == 1 and agent_count == 1 and process.args_count <= 3\n| sort cc asc\n| limit 100\n","SELECT\n    f.filename,\n    f.path,\n    u.username AS file_owner,\n    g.groupname AS group_owner,\n    datetime(f.atime, 'unixepoch') AS file_last_access_time,\n    datetime(f.mtime, 'unixepoch') AS file_last_modified_time,\n    datetime(f.ctime, 'unixepoch') AS file_last_status_change_time\n    datetime(f.btime, 'unixepoch') AS file_created_time,\n    f.size AS size_bytes\nFROM\n    file f\nLEFT JOIN\n    users u ON f.uid = u.uid\nLEFT JOIN\n    groups g ON f.gid = g.gid\nWHERE\n    f.path LIKE '/etc/modprobe.d/%'\n    OR f.path LIKE '/usr/lib/modprobe.d/%'\n    OR f.path LIKE '/usr/lib/security/%'\n    OR f.path LIKE '/etc/modules-load.d/%'\n    OR f.path LIKE '/run/modules-load.d/%'\n    OR f.path LIKE '/usr/local/lib/modules-load.d/%'\n    OR f.path like '/usr/lib/modules-load.d/%'\n    OR f.path = '/etc/modules'\n","SELECT * FROM kernel_modules;\n"],"license":"Elastic License v2","description":"This hunt identifies potential persistence mechanisms leveraging Loadable Kernel Modules (LKMs) on Linux systems. LKMs enable dynamic extension of kernel functionality but can be abused by attackers to load malicious code into the kernel, granting them high privileges or persistence. This hunt monitors suspicious kernel module file creations, LKM-related process executions, and access to kernel module configuration files.\n","threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"","name":"","reference":""},"technique":[{"id":"T1547","name":"","reference":"https://attack.mitre.org/techniques/T1547/","subtechnique":[{"id":"T1547.006","reference":"https://attack.mitre.org/techniques/T1547/006/"}]}]}]},"metadata":{"creation_date":"1970-01-01T00:00:00.000Z","updated_date":"1970-01-01T00:00:00.000Z","integration":["endpoint"]}}},"__N_SSG":true}