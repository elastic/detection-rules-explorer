{"pageProps":{"rule":{"metadata":{"creation_date":"2020/12/27","integration":["endpoint"],"maturity":"production","min_stack_comments":"New fields added: required_fields, related_integrations, setup","min_stack_version":"8.3.0","updated_date":"2023/06/22"},"rule":{"author":["Elastic"],"description":"Identifies execution of the Apple script interpreter (osascript) without a password prompt and with administrator\nprivileges.\n","from":"now-9m","index":["auditbeat-*","logs-endpoint.events.*"],"language":"eql","license":"Elastic License v2","name":"Apple Scripting Execution with Administrator Privileges","note":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.\n","references":["https://discussions.apple.com/thread/2266150"],"risk_score":47,"rule_id":"827f8d8f-4117-4ae4-b551-f56d54b9da6b","severity":"medium","tags":["Domain: Endpoint","OS: macOS","Use Case: Threat Detection","Tactic: Execution","Tactic: Privilege Escalation","Data Source: Elastic Defend"],"timestamp_override":"event.ingested","type":"eql","query":"process where host.os.type == \"macos\" and event.type in (\"start\", \"process_started\") and process.name : \"osascript\" and\n  process.command_line : \"osascript*with administrator privileges\"\n","threat":[{"framework":"MITRE ATT&CK","technique":[{"id":"T1078","name":"Valid Accounts","reference":"https://attack.mitre.org/techniques/T1078/"}],"tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"}},{"framework":"MITRE ATT&CK","technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/"}],"tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"}}]}}},"__N_SSG":true}