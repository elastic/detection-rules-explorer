{"pageProps":{"rule":{"metadata":{"creation_date":"2020/11/04","integration":["endpoint","windows"],"maturity":"production","min_stack_comments":"New fields added: required_fields, related_integrations, setup","min_stack_version":"8.3.0","updated_date":"2023/06/22"},"rule":{"author":["Elastic"],"description":"Identifies unusual processes connecting to domains using known free SSL certificates. Adversaries may employ a known\nencryption algorithm to conceal command and control traffic.\n","from":"now-9m","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*"],"language":"eql","license":"Elastic License v2","name":"Connection to Commonly Abused Free SSL Certificate Providers","note":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.\n","risk_score":21,"rule_id":"e3cf38fa-d5b8-46cc-87f9-4a7513e4281d","severity":"low","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Command and Control","Data Source: Elastic Defend"],"timestamp_override":"event.ingested","type":"eql","query":"network where host.os.type == \"windows\" and network.protocol == \"dns\" and\n  /* Add new free SSL certificate provider domains here */\n  dns.question.name : (\"*letsencrypt.org\", \"*.sslforfree.com\", \"*.zerossl.com\", \"*.freessl.org\") and\n\n  /* Native Windows process paths that are unlikely to have network connections to domains secured using free SSL certificates */\n  process.executable : (\"C:\\\\Windows\\\\System32\\\\*.exe\",\n                        \"C:\\\\Windows\\\\System\\\\*.exe\",\n\t                  \"C:\\\\Windows\\\\SysWOW64\\\\*.exe\",\n\t\t          \"C:\\\\Windows\\\\Microsoft.NET\\\\Framework*\\\\*.exe\",\n\t\t          \"C:\\\\Windows\\\\explorer.exe\",\n\t\t          \"C:\\\\Windows\\\\notepad.exe\") and\n\n  /* Insert noisy false positives here */\n  not process.name : (\"svchost.exe\", \"MicrosoftEdge*.exe\", \"msedge.exe\")\n","threat":[{"framework":"MITRE ATT&CK","technique":[{"id":"T1573","name":"Encrypted Channel","reference":"https://attack.mitre.org/techniques/T1573/"}],"tactic":{"id":"TA0011","name":"Command and Control","reference":"https://attack.mitre.org/tactics/TA0011/"}}]}}},"__N_SSG":true}