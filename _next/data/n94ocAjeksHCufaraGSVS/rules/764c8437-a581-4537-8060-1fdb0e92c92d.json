{"pageProps":{"rule":{"metadata":{"creation_date":"2022/07/05","integration":["kubernetes"],"maturity":"production","updated_date":"2024/05/21"},"rule":{"author":["Elastic"],"description":"This rule detects an attempt to create or modify a pod using the host IPC namespace. This gives access to data used by\nany pod that also use the hosts IPC namespace. If any process on the host or any processes in a pod uses the hosts\ninter-process communication mechanisms (shared memory, semaphore arrays, message queues, etc.), an attacker can\nread/write to those same mechanisms. They may look for files in /dev/shm or use ipcs to check for any IPC facilities\nbeing used.\n","false_positives":["    An administrator or developer may want to use a pod that runs as root and shares the host's IPC, Network, and PID\n    namespaces for debugging purposes. If something is going wrong in the cluster and there is no easy way to SSH onto\n    the host nodes directly, a privileged pod of this nature can be useful for viewing things like iptable rules and\n    network namespaces from the host's perspective. Add exceptions for trusted container images using the query field\n    \"kubernetes.audit.requestObject.spec.container.image\"\n    "],"index":["logs-kubernetes.*"],"language":"kuery","license":"Elastic License v2","name":"Kubernetes Pod Created With HostIPC","note":"## Setup\n\nThe Kubernetes Fleet integration with Audit Logs enabled or similarly structured data is required to be compatible with this rule.","references":["https://research.nccgroup.com/2021/11/10/detection-engineering-for-kubernetes-clusters/#part3-kubernetes-detections","https://kubernetes.io/docs/concepts/security/pod-security-policy/#host-namespaces","https://bishopfox.com/blog/kubernetes-pod-privilege-escalation"],"risk_score":47,"rule_id":"764c8437-a581-4537-8060-1fdb0e92c92d","severity":"medium","tags":["Data Source: Kubernetes","Tactic: Execution","Tactic: Privilege Escalation","Language: kuery"],"timestamp_override":"event.ingested","type":"query","query":"event.dataset : \"kubernetes.audit_logs\"\n  and kubernetes.audit.annotations.authorization_k8s_io/decision:\"allow\"\n  and kubernetes.audit.objectRef.resource:\"pods\"\n  and kubernetes.audit.verb:(\"create\" or \"update\" or \"patch\")\n  and kubernetes.audit.requestObject.spec.hostIPC:true\n  and not kubernetes.audit.requestObject.spec.containers.image: (\"docker.elastic.co/beats/elastic-agent:8.4.0\")\n","threat":[{"framework":"MITRE ATT&CK","technique":[{"id":"T1611","name":"Escape to Host","reference":"https://attack.mitre.org/techniques/T1611/"}],"tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"}},{"framework":"MITRE ATT&CK","technique":[{"id":"T1610","name":"Deploy Container","reference":"https://attack.mitre.org/techniques/T1610/"}],"tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"}}]}}},"__N_SSG":true}