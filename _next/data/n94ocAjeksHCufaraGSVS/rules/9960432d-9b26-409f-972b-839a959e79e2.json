{"pageProps":{"rule":{"metadata":{"creation_date":"2021/10/07","integration":["windows"],"maturity":"production","updated_date":"2024/10/15","min_stack_version":"8.14.0","min_stack_comments":"Breaking change at 8.14.0 for the Windows Integration."},"rule":{"author":["Elastic"],"description":"Identifies suspicious access to LSASS handle from a call trace pointing to DBGHelp.dll or DBGCore.dll, which both export\nthe MiniDumpWriteDump method that can be used to dump LSASS memory content in preparation for credential access.\n","from":"now-9m","index":["winlogbeat-*","logs-windows.sysmon_operational-*"],"language":"eql","license":"Elastic License v2","name":"Potential Credential Access via LSASS Memory Dump","references":["https://www.ired.team/offensive-security/credential-access-and-credential-dumping/dump-credentials-from-lsass-process-without-mimikatz","https://www.elastic.co/security-labs/detect-credential-access","https://www.elastic.co/security-labs/elastic-protects-against-data-wiper-malware-targeting-ukraine-hermeticwiper"],"risk_score":73,"rule_id":"9960432d-9b26-409f-972b-839a959e79e2","setup":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n","severity":"high","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Credential Access","Tactic:Execution","Data Source: Sysmon","Language: eql"],"timestamp_override":"event.ingested","type":"eql","query":"process where host.os.type == \"windows\" and event.code == \"10\" and\n  winlog.event_data.TargetImage : \"?:\\\\WINDOWS\\\\system32\\\\lsass.exe\" and\n\n   /* DLLs exporting MiniDumpWriteDump API to create an lsass mdmp*/\n  winlog.event_data.CallTrace : (\"*dbghelp*\", \"*dbgcore*\") and\n\n   /* case of lsass crashing */\n  not process.executable : (\n        \"?:\\\\Windows\\\\System32\\\\WerFault.exe\",\n        \"?:\\\\Windows\\\\SysWOW64\\\\WerFault.exe\",\n        \"?:\\\\Windows\\\\System32\\\\WerFaultSecure.exe\"\n      )\n","threat":[{"framework":"MITRE ATT&CK","technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}],"tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"}},{"framework":"MITRE ATT&CK","technique":[{"id":"T1106","name":"Native API","reference":"https://attack.mitre.org/techniques/T1106/"}],"tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"}}]}}},"__N_SSG":true}