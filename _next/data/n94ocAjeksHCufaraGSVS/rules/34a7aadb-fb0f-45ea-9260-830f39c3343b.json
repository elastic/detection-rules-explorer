{"pageProps":{"rule":{"hunt":{"author":"Elastic","description":"This hunt identifies instances where a signed Windows process attempts to load an unsigned DLL from the same process folder. Matches are limited to a unique host with low library load occurrence. Adversaries may execute their own malicious payloads by side-loading malicious DLLs.","integration":["endpoint","windows"],"uuid":"34a7aadb-fb0f-45ea-9260-830f39c3343b","name":"Rare DLL Side-Loading by Occurrence","language":["ES|QL"],"license":"Elastic License v2","query":["from logs-endpoint.events.library-*\n| where @timestamp > NOW() - 7 day\n| where host.os.family == \"windows\" and event.action == \"load\" and process.code_signature.status == \"trusted\" and dll.code_signature.status != \"trusted\" and dll.Ext.relative_file_creation_time <= 86400\n| eval dll_folder = substring(dll.path, 1, length(dll.path) - (length(dll.name) + 1))\n| eval process_folder = substring(process.executable, 1, length(process.executable) - (length(process.name) + 1))\n| where process_folder is not null and dll_folder is not null and process_folder == dll_folder and process.name != dll.name\n| eval dll_folder = replace(dll_folder, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"), process_folder = replace(process_folder, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\")\n| eval dll_folder = replace(dll_folder, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\"), process_folder = replace(process_folder, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\")\n| stats host_count = count_distinct(host.id), total_count = count(*) by dll_folder, dll.name, process.name, dll.hash.sha256\n/* total_count can be adjusted to higher or lower values depending on env */\n| where host_count == 1 and total_count <= 10 | keep total_count, host_count, dll_folder, dll.name, process.name, dll.hash.sha256\n","from logs-windows.sysmon_operational-*\n| where @timestamp > NOW() - 7 day\n| where host.os.family == \"windows\" and event.category == \"process\" and event.action == \"Image loaded\" and file.code_signature.status != \"Valid\" and\n  not file.path rlike \"\"\"[c-fC-F]:\\\\(Windows|windows|WINDOWS)\\\\(System32|SysWOW64|system32|syswow64)\\\\[a-zA-Z0-9_]+.dll\"\"\"\n| eval dll_folder = substring(file.path, 1, length(file.path) - (length(file.name) + 1))\n| eval process_folder = substring(process.executable, 1, length(process.executable) - (length(process.name) + 1))\n| where process_folder is not null and dll_folder is not null and process_folder == dll_folder and file.name != process.name\n/* paths normalization by removing random patterns */\n| eval dll_folder = replace(dll_folder, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"), process_folder = replace(process_folder, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"), dll_folder = replace(dll_folder, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\"), process_folder = replace(process_folder, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\")\n| stats host_count = count_distinct(host.id), total_count = count(*) by dll_folder, file.name, process.name, file.hash.sha256\n/* total_count can be adjusted to higher or lower values depending on env */\n| where host_count == 1 and total_count <= 10\n| keep total_count, host_count, dll_folder, file.name, process.name, file.hash.sha256\n"],"notes":["This hunt has two optional queries, one for Elastic Defend data and another for Sysmon data.","Based on the returned results you can further investigate suspicious DLLs by sha256 and library path.","Paths like `C:\\\\Users\\\\Public` and `C:\\\\ProgramData\\\\` are often observed in malware employing DLL side-loading.","Elastic Defned DLL Events include `dll.Ext.relative_file_creation_time` which help us limit the hunt to recently dropped DLLs."],"mitre":["T1574","T1574.002"]},"rule":{"tags":["Hunt Type: Hunt"],"query":["from logs-endpoint.events.library-*\n| where @timestamp > NOW() - 7 day\n| where host.os.family == \"windows\" and event.action == \"load\" and process.code_signature.status == \"trusted\" and dll.code_signature.status != \"trusted\" and dll.Ext.relative_file_creation_time <= 86400\n| eval dll_folder = substring(dll.path, 1, length(dll.path) - (length(dll.name) + 1))\n| eval process_folder = substring(process.executable, 1, length(process.executable) - (length(process.name) + 1))\n| where process_folder is not null and dll_folder is not null and process_folder == dll_folder and process.name != dll.name\n| eval dll_folder = replace(dll_folder, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"), process_folder = replace(process_folder, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\")\n| eval dll_folder = replace(dll_folder, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\"), process_folder = replace(process_folder, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\")\n| stats host_count = count_distinct(host.id), total_count = count(*) by dll_folder, dll.name, process.name, dll.hash.sha256\n/* total_count can be adjusted to higher or lower values depending on env */\n| where host_count == 1 and total_count <= 10 | keep total_count, host_count, dll_folder, dll.name, process.name, dll.hash.sha256\n","from logs-windows.sysmon_operational-*\n| where @timestamp > NOW() - 7 day\n| where host.os.family == \"windows\" and event.category == \"process\" and event.action == \"Image loaded\" and file.code_signature.status != \"Valid\" and\n  not file.path rlike \"\"\"[c-fC-F]:\\\\(Windows|windows|WINDOWS)\\\\(System32|SysWOW64|system32|syswow64)\\\\[a-zA-Z0-9_]+.dll\"\"\"\n| eval dll_folder = substring(file.path, 1, length(file.path) - (length(file.name) + 1))\n| eval process_folder = substring(process.executable, 1, length(process.executable) - (length(process.name) + 1))\n| where process_folder is not null and dll_folder is not null and process_folder == dll_folder and file.name != process.name\n/* paths normalization by removing random patterns */\n| eval dll_folder = replace(dll_folder, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"), process_folder = replace(process_folder, \"\"\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|ns[a-z][A-Z0-9]{3,4}\\.tmp|DX[A-Z0-9]{3,4}\\.tmp|7z[A-Z0-9]{3,5}\\.tmp|[0-9\\.\\-\\_]{3,})\"\"\", \"\"), dll_folder = replace(dll_folder, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\"), process_folder = replace(process_folder, \"\"\"[cC]:\\\\[uU][sS][eE][rR][sS]\\\\[a-zA-Z0-9\\.\\-\\_\\$]+\\\\\"\"\", \"C:\\\\\\\\users\\\\\\\\user\\\\\\\\\")\n| stats host_count = count_distinct(host.id), total_count = count(*) by dll_folder, file.name, process.name, file.hash.sha256\n/* total_count can be adjusted to higher or lower values depending on env */\n| where host_count == 1 and total_count <= 10\n| keep total_count, host_count, dll_folder, file.name, process.name, file.hash.sha256\n"],"license":"Elastic License v2","description":"This hunt identifies instances where a signed Windows process attempts to load an unsigned DLL from the same process folder. Matches are limited to a unique host with low library load occurrence. Adversaries may execute their own malicious payloads by side-loading malicious DLLs.","threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"","name":"","reference":""},"technique":[{"id":"T1574","name":"","reference":"https://attack.mitre.org/techniques/T1574/"},{"id":"T1574","name":"","reference":"https://attack.mitre.org/techniques/T1574/","subtechnique":[{"id":"T1574.002","reference":"https://attack.mitre.org/techniques/T1574/002/"}]}]}]},"metadata":{"creation_date":"1970-01-01T00:00:00.000Z","updated_date":"1970-01-01T00:00:00.000Z","integration":["endpoint","windows"]}}},"__N_SSG":true}