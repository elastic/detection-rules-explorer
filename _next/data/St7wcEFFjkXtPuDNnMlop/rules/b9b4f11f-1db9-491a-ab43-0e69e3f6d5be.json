{"pageProps":{"rule":{"hunt":{"author":"Elastic","description":"This hunt identifies potential persistence mechanisms through malicious Docker containers on Linux systems. Attackers can abuse Docker's capabilities, such as privileged containers, host namespace sharing, or mounting sensitive host paths, to maintain persistence or gain unauthorized access to the host. This hunt focuses on detecting suspicious container creations, modifications, and network connections.\n","integration":["endpoint"],"uuid":"b9b4f11f-1db9-491a-ab43-0e69e3f6d5be","name":"Persistence via Docker Container","language":["ES|QL","SQL"],"license":"Elastic License v2","notes":["Monitors for unusual network connections initiated by Docker containers, focusing on non-local IP addresses to identify potentially malicious activity.","Detects Docker containers running in privileged mode, which may indicate a risk of host compromise.","Identifies recently created Docker containers and images to highlight potential unauthorized deployments or suspicious additions.","Analyzes Docker container mount points to detect access to sensitive host directories, such as /var/run/docker.sock or /etc, which could enable container escape or host-level compromise.","Provides OSQuery queries to gather additional context about running containers, their configurations, and associated image metadata for forensic analysis."],"mitre":["T1610"],"query":["from logs-endpoint.events.network-*\n| keep @timestamp, host.os.type, event.type, event.action, process.executable, destination.ip, agent.id, process.executable, process.command_line\n| where @timestamp > now() - 7 days\n| where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"connection_attempted\" and\nprocess.executable like \"/var/lib/docker/*\" and destination.ip IS NOT null and not \nCIDR_MATCH(\n  destination.ip,\n  // Exclude common destination IP ranges for your environment here\n  \"127.0.0.0/8\", \"169.254.0.0/16\", \"224.0.0.0/4\", \"::1\", \"172.18.0.0/16\"\n)\n| stats cc = count(), agent_count = count_distinct(agent.id) by process.executable, process.command_line, destination.ip\n| where agent_count <= 3\n| sort cc asc\n| limit 100\n","SELECT * FROM docker_containers\n","SELECT * FROM docker_containers\nWHERE privileged = 1\n","SELECT * FROM docker_containers\nWHERE created <= strftime('%s', 'now')\nAND strftime('%s', 'now') - created <= (7 * 86400); -- Created in the last 7 days\n","SELECT * FROM docker_images\n","SELECT * FROM docker_images\nWHERE strftime('%s', 'now') - created <= (7 * 86400); -- Pulled in the last 7 days\n","SELECT \n    id AS container_id,\n    name AS container_name,\n    source AS host_path,\n    destination AS container_path,\n    rw AS is_read_write\nFROM \n    docker_container_mounts\nWHERE \n    source IN ('/var/run/docker.sock', '/', '/etc', '/var/lib/docker');\n    -- Add your own list of additional sources here\n"]},"rule":{"tags":["Hunt Type: Hunt"],"query":["from logs-endpoint.events.network-*\n| keep @timestamp, host.os.type, event.type, event.action, process.executable, destination.ip, agent.id, process.executable, process.command_line\n| where @timestamp > now() - 7 days\n| where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"connection_attempted\" and\nprocess.executable like \"/var/lib/docker/*\" and destination.ip IS NOT null and not \nCIDR_MATCH(\n  destination.ip,\n  // Exclude common destination IP ranges for your environment here\n  \"127.0.0.0/8\", \"169.254.0.0/16\", \"224.0.0.0/4\", \"::1\", \"172.18.0.0/16\"\n)\n| stats cc = count(), agent_count = count_distinct(agent.id) by process.executable, process.command_line, destination.ip\n| where agent_count <= 3\n| sort cc asc\n| limit 100\n","SELECT * FROM docker_containers\n","SELECT * FROM docker_containers\nWHERE privileged = 1\n","SELECT * FROM docker_containers\nWHERE created <= strftime('%s', 'now')\nAND strftime('%s', 'now') - created <= (7 * 86400); -- Created in the last 7 days\n","SELECT * FROM docker_images\n","SELECT * FROM docker_images\nWHERE strftime('%s', 'now') - created <= (7 * 86400); -- Pulled in the last 7 days\n","SELECT \n    id AS container_id,\n    name AS container_name,\n    source AS host_path,\n    destination AS container_path,\n    rw AS is_read_write\nFROM \n    docker_container_mounts\nWHERE \n    source IN ('/var/run/docker.sock', '/', '/etc', '/var/lib/docker');\n    -- Add your own list of additional sources here\n"],"license":"Elastic License v2","description":"This hunt identifies potential persistence mechanisms through malicious Docker containers on Linux systems. Attackers can abuse Docker's capabilities, such as privileged containers, host namespace sharing, or mounting sensitive host paths, to maintain persistence or gain unauthorized access to the host. This hunt focuses on detecting suspicious container creations, modifications, and network connections.\n","threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"","name":"","reference":""},"technique":[{"id":"T1610","name":"","reference":"https://attack.mitre.org/techniques/T1610/"}]}]},"metadata":{"creation_date":"1970-01-01T00:00:00.000Z","updated_date":"1970-01-01T00:00:00.000Z","integration":["endpoint"]}}},"__N_SSG":true}