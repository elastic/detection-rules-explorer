{"pageProps":{"rule":{"metadata":{"creation_date":"2023/07/06","integration":["auditd_manager"],"maturity":"production","min_stack_comments":"New fields added: required_fields, related_integrations, setup","min_stack_version":"8.3.0","updated_date":"2023/07/06"},"rule":{"author":["Elastic"],"description":"An FTP (file transfer protocol) brute force attack is a method where an attacker systematically tries different \ncombinations of usernames and passwords to gain unauthorized access to an FTP server, and if successful, the impact can \ninclude unauthorized data access, manipulation, or theft, compromising the security and integrity of the server and \npotentially exposing sensitive information. This rule identifies multiple consecutive authentication failures targeting \na specific user account from the same source address and within a short time interval, followed by a successful \nauthentication.\n","from":"now-9m","index":["auditbeat-*","logs-auditd_manager.auditd-*"],"language":"eql","license":"Elastic License v2","name":"Potential Successful Linux FTP Brute Force Attack Detected","note":"## Setup\nThis rule requires the use of the `auditd_manager` integration. `Auditd_manager` is a tool designed to simplify and enhance the management of the audit subsystem in Linux systems. It provides a user-friendly interface and automation capabilities for configuring and monitoring system auditing through the auditd daemon. With `auditd_manager`, administrators can easily define audit rules, track system events, and generate comprehensive audit reports, improving overall security and compliance in the system. The following steps should be executed in order to install and deploy `auditd_manager` on a Linux system. \n```\nKibana -->\nManagement -->\nIntegrations -->\nAuditd Manager -->\nAdd Auditd Manager\n```\n`Auditd_manager` subscribes to the kernel and receives events as they occur without any additional configuration. However, if more advanced configuration is required to detect specific behavior, audit rules can be added to the integration in either the \"audit rules\" configuration box or the \"auditd rule files\" box by specifying a file to read the audit rules from. \n```\nFor this detection rule no additional audit rules are required to be added to the integration. \n```\nAdd the newly installed `auditd manager` to an agent policy, and deploy the agent on a Linux system from which auditd log files are desirable.\n","risk_score":47,"rule_id":"66712812-e7f2-4a1d-bbda-dd0b5cf20c5d","severity":"medium","tags":["Domain: Endpoint","OS: Linux","Use Case: Threat Detection","Tactic: Credential Access"],"type":"eql","query":"sequence by host.id, auditd.data.addr, related.user with maxspan=5s\n  [authentication where host.os.type == \"linux\" and event.dataset == \"auditd_manager.auditd\" and \n   event.action == \"authenticated\" and auditd.data.terminal == \"ftp\" and event.outcome == \"failure\" and \n   auditd.data.addr != null and auditd.data.addr != \"0.0.0.0\" and auditd.data.addr != \"::\"] with runs=10\n  [authentication where host.os.type == \"linux\" and event.dataset == \"auditd_manager.auditd\" and \n   event.action  == \"authenticated\" and auditd.data.terminal == \"ftp\" and event.outcome == \"success\" and \n   auditd.data.addr != null and auditd.data.addr != \"0.0.0.0\" and auditd.data.addr != \"::\"] | tail 1\n","threat":[{"framework":"MITRE ATT&CK","technique":[{"id":"T1110","name":"Brute Force","reference":"https://attack.mitre.org/techniques/T1110/","subtechnique":[{"id":"T1110.001","name":"Password Guessing","reference":"https://attack.mitre.org/techniques/T1110/001/"},{"id":"T1110.003","name":"Password Spraying","reference":"https://attack.mitre.org/techniques/T1110/003/"}]}],"tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"}}]}}},"__N_SSG":true}