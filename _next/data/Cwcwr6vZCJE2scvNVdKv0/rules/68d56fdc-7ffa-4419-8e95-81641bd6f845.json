{"pageProps":{"rule":{"metadata":{"creation_date":"2020/10/19","integration":["endpoint","windows"],"maturity":"production","min_stack_comments":"New fields added: required_fields, related_integrations, setup","min_stack_version":"8.3.0","updated_date":"2023/06/22"},"rule":{"author":["Elastic"],"description":"Identifies User Account Control (UAC) bypass attempts via the ICMLuaUtil Elevated COM interface. Attackers may attempt\nto bypass UAC to stealthily execute code with elevated permissions.\n","from":"now-9m","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*","endgame-*"],"language":"eql","license":"Elastic License v2","name":"UAC Bypass via ICMLuaUtil Elevated COM Interface","note":"## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.\n","risk_score":73,"rule_id":"68d56fdc-7ffa-4419-8e95-81641bd6f845","severity":"high","tags":["Domain: Endpoint","OS: Windows","Use Case: Threat Detection","Tactic: Privilege Escalation","Data Source: Elastic Endgame"],"timestamp_override":"event.ingested","type":"eql","query":"process where host.os.type == \"windows\" and event.type == \"start\" and\n process.parent.name == \"dllhost.exe\" and\n process.parent.args in (\"/Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}\", \"/Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}\") and\n process.pe.original_file_name != \"WerFault.exe\"\n","threat":[{"framework":"MITRE ATT&CK","technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.002","name":"Bypass User Account Control","reference":"https://attack.mitre.org/techniques/T1548/002/"}]}],"tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"}}]}}},"__N_SSG":true}